apiVersion: v1
kind: Service
metadata:
  name: is-it-up
  labels:
    app: is-it-up
spec:
  ports:
  - port: 4000
    name: web
  clusterIP: None
  selector:
    app: is-it-up
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: is-it-up
spec:
  serviceName: "is-it-up"
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: is-it-up
  template:
    metadata:
      labels:
        app: is-it-up
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '4000'
    spec:
      containers:
      - name: is-it-up
        image: binarytemple/is_it_up
        args:
          - foreground
        env:
          - name: ERLANG_COOKIE
            value: "cookie"
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        volumeMounts:
        - name: debug
          mountPath: /debug
  volumeClaimTemplates:
  - metadata:
      name: debug
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 200m